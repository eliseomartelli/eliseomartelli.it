{
  "title": "IoT device segregation on EdgeOS",
  "excerpt": "VLANs? VLANs. Get to know how to segregate chatty IoT devices on your network",
  "date": "2020-09-14T00:00:00.000Z",
  "tags": [
    "Network",
    "IoT"
  ],
  "body": {
    "raw": "\n![Network Equipment](https://p0.pikist.com/photos/309/174/network-equipment-hardware-internet-data-server-communication-connection-datacenter.jpg)\n\nHaving a good firewall in place when building a home network is something that now is more important than ever. Traditionally, home firewalls were made to **protect** the internal **local network** from connection that could originate from the internet (That's what you expect from an ISP provided modem/router combo). In this day and age, thanks to the **fast rise** of **smart home** gadgets, our home networks are becoming more and more occupied by little computers usually running firmware that is **not possible to check** or manage. A firewall can help us mitigate the [potential issues](https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=upnp) that can occur by using this kind of devices.\n\nThe intent of this article is to provide a **sensible** baseline **configuration** that you can expand to suit your own needs. These concepts can be applied on a variety of SOHO routers (check yor router for VLAN tagging support and firewall capabilities between different networks).\n\nThe router I've chosen to use for this post is the small and mighty [**Ubiquiti EdgeRouter X**](https://amzn.to/2FtPBv9), a five port router that's plenty capable of handling a medium-to-large home network without _breaking the bank_. This router runs a fork of Vyatta called **EdgeOS** as the stock operating system.\nI've paired this device with a [**Unifi Access Point**](https://amzn.to/2DXEkm6) to satisfy all my Wi-Fi needs.\n\n## High-level overview\n\nThe steps you need to take care of are the following:\n\n1. **Create** a new **virtual interface** and assing it an IP address;\n2. **Attach** the virtual interface to an ethernet port;\n3. **Setup a firewall** to isolate this new interface from the rest of your network.\n\n## EdgeOS specific configuration\n\nTo configure the EdgeRouter we are going to use the CLI. We are going to **start** a configuration session by typing \"configure\" into the shell.\n\n1. **Create** a network group that targets [**RFC1918**](https://tools.ietf.org/html/rfc1918) networks:\n\n```bash\nset firewall group network-group RFC1918 description 'RFC1918 ranges'\nset firewall group network-group RFC1918 network 192.168.0.0/16\nset firewall group network-group RFC1918 network 172.16.0.0/12\nset firewall group network-group RFC1918 network 10.0.0.0/8\n```\n\n2. Setup the firewall to **block** traffic to RFC1918 networks but allow DNS and DHCP:\n\n```bash\nset firewall name IOT_IN_LOCAL default-action accept\nset firewall name IOT_IN_LOCAL description 'IOT In and Local ruleset.'\n```\n\n2.1 We are going to **allow established and related** network traffic so that we can access the IOT devices from other networks.\n\n```bash\nset firewall name IOT_IN_LOCAL rule 10 action accept\nset firewall name IOT_IN_LOCAL rule 10 description 'allow established/related'\nset firewall name IOT_IN_LOCAL rule 10 protocol all\nset firewall name IOT_IN_LOCAL rule 10 state established enable\nset firewall name IOT_IN_LOCAL rule 10 state related enable\n```\n\n2.2 We can't forget to allow **DHCP** requests so that our devices can get an IP address.\nIt might be useful to allow **DNS** requests originating from our IOT VLAN too.\n\n```bash\nset firewall name IOT_IN_LOCAL rule 20 action accept\nset firewall name IOT_IN_LOCAL rule 20 description 'Allow DNS'\nset firewall name IOT_IN_LOCAL rule 20 destination port 53\nset firewall name IOT_IN_LOCAL rule 20 protocol tcp_udp\n\nset firewall name IOT_IN_LOCAL rule 30 action accept\nset firewall name IOT_IN_LOCAL rule 30 description 'Allow DHCP'\nset firewall name IOT_IN_LOCAL rule 30 destination port 67\nset firewall name IOT_IN_LOCAL rule 30 protocol udp\n```\n\n2.3 The last firewall rule we are going to setup is the one that **blocks** traffic going to our other private network(s).\n\n```bash\nset firewall name IOT_IN_LOCAL rule 40 action drop\nset firewall name IOT_IN_LOCAL rule 40 description 'Drop RFC1918'\nset firewall name IOT_IN_LOCAL rule 40 destination group network-group RFC1918\nset firewall name IOT_IN_LOCAL rule 40 protocol all\n```\n\n3. **Create** a new **virtual interface** for the VLAN intended to be used by our IOT devices:\n\n```bash\nset interfaces ethernet eth1 vif 32 address 10.0.32.1/24\nset interfaces ethernet eth1 vif 32 description IOT_VLAN\nset interfaces ethernet eht1 vif 32 mtu 1500\n```\n\n4. **Assign** the firewall ruleset to the _in_ and _local_ sides of the firewall.\n\n```bash\nset interfaces ethernet eth1 vif 32 firewall in name IOT_IN_LOCAL\nset interfaces ethernet eth1 vif 32 firewall local name IOT_IN_LOCAL\n```\n\n5. Setup the **DHCP** server to listen to the requests coming from the new VLAN:\n\n```bash\nset service dhcp-server shared-network-name IOT_VLAN authoritative disable\nset service dhcp-server shared-network-name IOT_VLAN subnet 10.0.32.0/24 default-router 10.0.32.1\nset service dhcp-server shared-network-name IOT_VLAN subnet 10.0.32.0/24 dns-server 10.0.32.1\nset service dhcp-server shared-network-name IOT_VLAN subnet 10.0.32.0/24 lease 86499\nset service dhcp-server shared-network-name IOT_VLAN start 10.0.32.10 stop 10.0.32.100\n```\n\n6. Setup the **DNS** forwarder to listen on this virtual interface:\n\n```bash\nset service dns forwarding listen-on eth1.32\n```\n\n7. Configure the **mDNS repeater** to enable mDNS resolution from our other networks (useful for devices like the Chromecast).\n\n```bash\nset service mdns repeater interface eth1\nset service mdns repeater interface eth1.32\n```\n\n8. **Save** your configuration with \"commit\" and then \"save\".\n\nAt this point you should now have a new VLAN that cannot see your other networks but can still access the internet.\n\n---\n\n_Disclosure: this post contains one (or more) affiliate link. If you buy something through one of those links you won't pay anything more but I'll get a small commission that helps me mantaining this blog._\n",
    "code": "var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var m=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var r in e)o(t,r,{get:e[r],enumerable:!0})},l=(t,e,r,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!f.call(t,i)&&i!==r&&o(t,i,{get:()=>e[i],enumerable:!(a=g(e,i))||a.enumerable});return t};var I=(t,e,r)=>(r=t!=null?d(p(t)):{},l(e||!t||!t.__esModule?o(r,\"default\",{value:t,enumerable:!0}):r,t)),O=t=>l(o({},\"__esModule\",{value:!0}),t);var c=m((b,s)=>{s.exports=_jsx_runtime});var N={};w(N,{default:()=>v,frontmatter:()=>L});var n=I(c()),L={title:\"IoT device segregation on EdgeOS\",date:\"2020-09-14\",excerpt:\"VLANs? VLANs. Get to know how to segregate chatty IoT devices on your network\",tags:[\"Network\",\"IoT\"]};function h(t){let e=Object.assign({p:\"p\",img:\"img\",strong:\"strong\",a:\"a\",em:\"em\",h2:\"h2\",ol:\"ol\",li:\"li\",pre:\"pre\",code:\"code\",hr:\"hr\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://p0.pikist.com/photos/309/174/network-equipment-hardware-internet-data-server-communication-connection-datacenter.jpg\",alt:\"Network Equipment\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Having a good firewall in place when building a home network is something that now is more important than ever. Traditionally, home firewalls were made to \",(0,n.jsx)(e.strong,{children:\"protect\"}),\" the internal \",(0,n.jsx)(e.strong,{children:\"local network\"}),\" from connection that could originate from the internet (That's what you expect from an ISP provided modem/router combo). In this day and age, thanks to the \",(0,n.jsx)(e.strong,{children:\"fast rise\"}),\" of \",(0,n.jsx)(e.strong,{children:\"smart home\"}),\" gadgets, our home networks are becoming more and more occupied by little computers usually running firmware that is \",(0,n.jsx)(e.strong,{children:\"not possible to check\"}),\" or manage. A firewall can help us mitigate the \",(0,n.jsx)(e.a,{href:\"https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=upnp\",children:\"potential issues\"}),\" that can occur by using this kind of devices.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The intent of this article is to provide a \",(0,n.jsx)(e.strong,{children:\"sensible\"}),\" baseline \",(0,n.jsx)(e.strong,{children:\"configuration\"}),\" that you can expand to suit your own needs. These concepts can be applied on a variety of SOHO routers (check yor router for VLAN tagging support and firewall capabilities between different networks).\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The router I've chosen to use for this post is the small and mighty \",(0,n.jsx)(e.a,{href:\"https://amzn.to/2FtPBv9\",children:(0,n.jsx)(e.strong,{children:\"Ubiquiti EdgeRouter X\"})}),\", a five port router that's plenty capable of handling a medium-to-large home network without \",(0,n.jsx)(e.em,{children:\"breaking the bank\"}),\". This router runs a fork of Vyatta called \",(0,n.jsx)(e.strong,{children:\"EdgeOS\"}),` as the stock operating system.\nI've paired this device with a `,(0,n.jsx)(e.a,{href:\"https://amzn.to/2DXEkm6\",children:(0,n.jsx)(e.strong,{children:\"Unifi Access Point\"})}),\" to satisfy all my Wi-Fi needs.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"High-level overview\"}),`\n`,(0,n.jsx)(e.p,{children:\"The steps you need to take care of are the following:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Create\"}),\" a new \",(0,n.jsx)(e.strong,{children:\"virtual interface\"}),\" and assing it an IP address;\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Attach\"}),\" the virtual interface to an ethernet port;\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Setup a firewall\"}),\" to isolate this new interface from the rest of your network.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"EdgeOS specific configuration\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To configure the EdgeRouter we are going to use the CLI. We are going to \",(0,n.jsx)(e.strong,{children:\"start\"}),' a configuration session by typing \"configure\" into the shell.']}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Create\"}),\" a network group that targets \",(0,n.jsx)(e.a,{href:\"https://tools.ietf.org/html/rfc1918\",children:(0,n.jsx)(e.strong,{children:\"RFC1918\"})}),\" networks:\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set firewall group network-group RFC1918 description 'RFC1918 ranges'\nset firewall group network-group RFC1918 network 192.168.0.0/16\nset firewall group network-group RFC1918 network 172.16.0.0/12\nset firewall group network-group RFC1918 network 10.0.0.0/8\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"2\",children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Setup the firewall to \",(0,n.jsx)(e.strong,{children:\"block\"}),\" traffic to RFC1918 networks but allow DNS and DHCP:\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set firewall name IOT_IN_LOCAL default-action accept\nset firewall name IOT_IN_LOCAL description 'IOT In and Local ruleset.'\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"2.1 We are going to \",(0,n.jsx)(e.strong,{children:\"allow established and related\"}),\" network traffic so that we can access the IOT devices from other networks.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set firewall name IOT_IN_LOCAL rule 10 action accept\nset firewall name IOT_IN_LOCAL rule 10 description 'allow established/related'\nset firewall name IOT_IN_LOCAL rule 10 protocol all\nset firewall name IOT_IN_LOCAL rule 10 state established enable\nset firewall name IOT_IN_LOCAL rule 10 state related enable\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"2.2 We can't forget to allow \",(0,n.jsx)(e.strong,{children:\"DHCP\"}),` requests so that our devices can get an IP address.\nIt might be useful to allow `,(0,n.jsx)(e.strong,{children:\"DNS\"}),\" requests originating from our IOT VLAN too.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set firewall name IOT_IN_LOCAL rule 20 action accept\nset firewall name IOT_IN_LOCAL rule 20 description 'Allow DNS'\nset firewall name IOT_IN_LOCAL rule 20 destination port 53\nset firewall name IOT_IN_LOCAL rule 20 protocol tcp_udp\n\nset firewall name IOT_IN_LOCAL rule 30 action accept\nset firewall name IOT_IN_LOCAL rule 30 description 'Allow DHCP'\nset firewall name IOT_IN_LOCAL rule 30 destination port 67\nset firewall name IOT_IN_LOCAL rule 30 protocol udp\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"2.3 The last firewall rule we are going to setup is the one that \",(0,n.jsx)(e.strong,{children:\"blocks\"}),\" traffic going to our other private network(s).\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set firewall name IOT_IN_LOCAL rule 40 action drop\nset firewall name IOT_IN_LOCAL rule 40 description 'Drop RFC1918'\nset firewall name IOT_IN_LOCAL rule 40 destination group network-group RFC1918\nset firewall name IOT_IN_LOCAL rule 40 protocol all\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"3\",children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Create\"}),\" a new \",(0,n.jsx)(e.strong,{children:\"virtual interface\"}),\" for the VLAN intended to be used by our IOT devices:\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set interfaces ethernet eth1 vif 32 address 10.0.32.1/24\nset interfaces ethernet eth1 vif 32 description IOT_VLAN\nset interfaces ethernet eht1 vif 32 mtu 1500\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"4\",children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Assign\"}),\" the firewall ruleset to the \",(0,n.jsx)(e.em,{children:\"in\"}),\" and \",(0,n.jsx)(e.em,{children:\"local\"}),\" sides of the firewall.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set interfaces ethernet eth1 vif 32 firewall in name IOT_IN_LOCAL\nset interfaces ethernet eth1 vif 32 firewall local name IOT_IN_LOCAL\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"5\",children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Setup the \",(0,n.jsx)(e.strong,{children:\"DHCP\"}),\" server to listen to the requests coming from the new VLAN:\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set service dhcp-server shared-network-name IOT_VLAN authoritative disable\nset service dhcp-server shared-network-name IOT_VLAN subnet 10.0.32.0/24 default-router 10.0.32.1\nset service dhcp-server shared-network-name IOT_VLAN subnet 10.0.32.0/24 dns-server 10.0.32.1\nset service dhcp-server shared-network-name IOT_VLAN subnet 10.0.32.0/24 lease 86499\nset service dhcp-server shared-network-name IOT_VLAN start 10.0.32.10 stop 10.0.32.100\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"6\",children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Setup the \",(0,n.jsx)(e.strong,{children:\"DNS\"}),\" forwarder to listen on this virtual interface:\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set service dns forwarding listen-on eth1.32\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"7\",children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Configure the \",(0,n.jsx)(e.strong,{children:\"mDNS repeater\"}),\" to enable mDNS resolution from our other networks (useful for devices like the Chromecast).\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`set service mdns repeater interface eth1\nset service mdns repeater interface eth1.32\n`})}),`\n`,(0,n.jsxs)(e.ol,{start:\"8\",children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Save\"}),' your configuration with \"commit\" and then \"save\".']}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"At this point you should now have a new VLAN that cannot see your other networks but can still access the internet.\"}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:\"Disclosure: this post contains one (or more) affiliate link. If you buy something through one of those links you won't pay anything more but I'll get a small commission that helps me mantaining this blog.\"})})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var v=_;return O(N);})();\n;return Component;"
  },
  "_id": "blog/iot-vlan-edgeos.md",
  "_raw": {
    "sourceFilePath": "blog/iot-vlan-edgeos.md",
    "sourceFileName": "iot-vlan-edgeos.md",
    "sourceFileDir": "blog",
    "contentType": "markdown",
    "flattenedPath": "blog/iot-vlan-edgeos"
  },
  "type": "Post",
  "url": "blog/iot-vlan-edgeos",
  "timeToRead": "4"
}